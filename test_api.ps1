# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API TrendPulse AI
# –ó–∞–ø—É—Å–∫–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –≥–¥–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–∏—Å—Ç–µ–º–∞

param(
    [string]$ApiUrl = "http://localhost:8000"
)

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
$Red = "Red"
$Green = "Green"
$Yellow = "Yellow"
$Blue = "Blue"

Write-Host "üöÄ TrendPulse AI - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API" -ForegroundColor $Blue
Write-Host "üîó API URL: $ApiUrl" -ForegroundColor $Blue
Write-Host ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
function Check-Status {
    param($StatusCode, $ResponseBody)
    
    if ($StatusCode -eq 200) {
        Write-Host "‚úÖ –£—Å–ø–µ—à–Ω–æ ($StatusCode)" -ForegroundColor $Green
    } else {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ ($StatusCode)" -ForegroundColor $Red
        Write-Host "–û—Ç–≤–µ—Ç: $ResponseBody" -ForegroundColor $Yellow
    }
}

# –¢–µ—Å—Ç 1: Health Check
Write-Host "üìä –¢–µ—Å—Ç 1: Health Check" -ForegroundColor $Blue
try {
    $response = Invoke-RestMethod -Uri "$ApiUrl/health" -Method Get
    Check-Status 200 $response
    
    Write-Host "üìã –°—Ç–∞—Ç—É—Å: $($response.status)" -ForegroundColor $Green
    Write-Host "üìã –í–µ—Ä—Å–∏—è: $($response.version)" -ForegroundColor $Green
} catch {
    $statusCode = $_.Exception.Response.StatusCode.value__
    Check-Status $statusCode $_.Exception.Message
}
Write-Host ""

# –¢–µ—Å—Ç 2: API Info
Write-Host "üìä –¢–µ—Å—Ç 2: API Info" -ForegroundColor $Blue
try {
    $response = Invoke-RestMethod -Uri "$ApiUrl/api-info" -Method Get
    Check-Status 200 $response
    
    Write-Host "üìã –ò–º—è: $($response.name)" -ForegroundColor $Green
    Write-Host "üìã –í–µ—Ä—Å–∏—è: $($response.version)" -ForegroundColor $Green
    Write-Host "üìã –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏: $($response.capabilities.Count) —Ñ—É–Ω–∫—Ü–∏–π" -ForegroundColor $Green
} catch {
    $statusCode = $_.Exception.Response.StatusCode.value__
    Check-Status $statusCode $_.Exception.Message
}
Write-Host ""

# –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
Write-Host "üìä –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞" -ForegroundColor $Blue
$projectData = @{
    name = "–¢–µ—Å—Ç–æ–≤—ã–π –∂–∏–ª–æ–π –∫–æ–º–ø–ª–µ–∫—Å"
    project_type = "residential"
    location = "–ú–æ—Å–∫–≤–∞, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, 1"
    budget = 100000000
    area = 5000
    user_id = 1
} | ConvertTo-Json

try {
    $response = Invoke-RestMethod -Uri "$ApiUrl/projects/" -Method Post -Body $projectData -ContentType "application/json"
    Check-Status 200 $response
    
    $projectId = $response.id
    Write-Host "üìã ID –ø—Ä–æ–µ–∫—Ç–∞: $projectId" -ForegroundColor $Green
    Write-Host "üìã –ù–∞–∑–≤–∞–Ω–∏–µ: $($response.name)" -ForegroundColor $Green
    Write-Host "üìã –¢–∏–ø: $($response.project_type)" -ForegroundColor $Green
    Write-Host "üìã –ë—é–¥–∂–µ—Ç: $($response.budget)" -ForegroundColor $Green
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö —Ç–µ—Å—Ç–æ–≤
    $script:TestProjectId = $projectId
} catch {
    $statusCode = $_.Exception.Response.StatusCode.value__
    Check-Status $statusCode $_.Exception.Message
    Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö —Ç–µ—Å—Ç–æ–≤" -ForegroundColor $Red
    exit 1
}
Write-Host ""

# –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤
Write-Host "üìä –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤" -ForegroundColor $Blue
try {
    $response = Invoke-RestMethod -Uri "$ApiUrl/projects/" -Method Get
    Check-Status 200 $response
    
    $projectsCount = $response.Count
    Write-Host "üìã –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–µ–∫—Ç–æ–≤: $projectsCount" -ForegroundColor $Green
    
    if ($projectsCount -gt 0) {
        $firstProject = $response[0]
        Write-Host "üìã –ü–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç: $($firstProject.name)" -ForegroundColor $Green
    }
} catch {
    $statusCode = $_.Exception.Response.StatusCode.value__
    Check-Status $statusCode $_.Exception.Message
}
Write-Host ""

# –¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ ID
if ($script:TestProjectId) {
    Write-Host "üìä –¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ ID ($($script:TestProjectId))" -ForegroundColor $Blue
    try {
        $response = Invoke-RestMethod -Uri "$ApiUrl/projects/$($script:TestProjectId)" -Method Get
        Check-Status 200 $response
        
        Write-Host "üìã –ù–∞–∑–≤–∞–Ω–∏–µ: $($response.name)" -ForegroundColor $Green
        Write-Host "üìã –õ–æ–∫–∞—Ü–∏—è: $($response.location)" -ForegroundColor $Green
    } catch {
        $statusCode = $_.Exception.Response.StatusCode.value__
        Check-Status $statusCode $_.Exception.Message
    }
    Write-Host ""
}

# –¢–µ—Å—Ç 6: –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥—Ä—è–¥—á–∏–∫–∞
Write-Host "üìä –¢–µ—Å—Ç 6: –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥—Ä—è–¥—á–∏–∫–∞" -ForegroundColor $Blue
$contractorData = @{
    name = "–û–û–û –¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–¥—Ä—è–¥—á–∏–∫"
    specialization = "–ñ–∏–ª–æ–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ"
    rating = 4.5
    contact_phone = "+7 (999) 123-45-67"
    contact_email = "test@contractor.ru"
    experience_years = 10
    completed_projects = 25
} | ConvertTo-Json

try {
    $response = Invoke-RestMethod -Uri "$ApiUrl/contractors/" -Method Post -Body $contractorData -ContentType "application/json"
    Check-Status 200 $response
    
    Write-Host "üìã –ù–∞–∑–≤–∞–Ω–∏–µ: $($response.name)" -ForegroundColor $Green
    Write-Host "üìã –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: $($response.specialization)" -ForegroundColor $Green
    Write-Host "üìã –†–µ–π—Ç–∏–Ω–≥: $($response.rating)" -ForegroundColor $Green
} catch {
    $statusCode = $_.Exception.Response.StatusCode.value__
    Check-Status $statusCode $_.Exception.Message
}
Write-Host ""

# –¢–µ—Å—Ç 7: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–¥—Ä—è–¥—á–∏–∫–æ–≤
Write-Host "üìä –¢–µ—Å—Ç 7: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–¥—Ä—è–¥—á–∏–∫–æ–≤" -ForegroundColor $Blue
try {
    $response = Invoke-RestMethod -Uri "$ApiUrl/contractors/" -Method Get
    Check-Status 200 $response
    
    $contractorsCount = $response.Count
    Write-Host "üìã –ù–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ä—è–¥—á–∏–∫–æ–≤: $contractorsCount" -ForegroundColor $Green
} catch {
    $statusCode = $_.Exception.Response.StatusCode.value__
    Check-Status $statusCode $_.Exception.Message
}
Write-Host ""

# –¢–µ—Å—Ç 8: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
Write-Host "üìä –¢–µ—Å—Ç 8: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤" -ForegroundColor $Blue
try {
    $response = Invoke-RestMethod -Uri "$ApiUrl/scenarios" -Method Get
    Check-Status 200 $response
    
    $scenariosCount = $response.Count
    Write-Host "üìã –ù–∞–π–¥–µ–Ω–æ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤: $scenariosCount" -ForegroundColor $Green
    
    if ($scenariosCount -gt 0) {
        $firstScenario = $response[0]
        Write-Host "üìã –ü–µ—Ä–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π: $($firstScenario.name)" -ForegroundColor $Green
        Write-Host "üìã ROI: $($firstScenario.roi)%" -ForegroundColor $Green
    }
} catch {
    $statusCode = $_.Exception.Response.StatusCode.value__
    Check-Status $statusCode $_.Exception.Message
}
Write-Host ""

# –¢–µ—Å—Ç 9: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
if ($script:TestProjectId) {
    Write-Host "üìä –¢–µ—Å—Ç 9: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ ($($script:TestProjectId))" -ForegroundColor $Blue
    try {
        $response = Invoke-RestMethod -Uri "$ApiUrl/projects/$($script:TestProjectId)/scenarios/generate/?count=3" -Method Post
        Check-Status 200 $response
        
        $scenariosCount = $response.Count
        Write-Host "üìã –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤: $scenariosCount" -ForegroundColor $Green
        
        if ($scenariosCount -gt 0) {
            $firstScenario = $response[0]
            Write-Host "üìã –ü–µ—Ä–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π: $($firstScenario.name)" -ForegroundColor $Green
            Write-Host "üìã ROI: $($firstScenario.roi)%" -ForegroundColor $Green
        }
    } catch {
        $statusCode = $_.Exception.Response.StatusCode.value__
        Check-Status $statusCode $_.Exception.Message
    }
    Write-Host ""
}

# –¢–µ—Å—Ç 10: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã
Write-Host "üìä –¢–µ—Å—Ç 10: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã" -ForegroundColor $Blue
try {
    $response = Invoke-RestMethod -Uri "$ApiUrl/stats" -Method Get
    Check-Status 200 $response
    
    Write-Host "üìã –í—Å–µ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤: $($response.scenarios.total_scenarios)" -ForegroundColor $Green
    Write-Host "üìã –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: $($response.users.total_users)" -ForegroundColor $Green
    Write-Host "üìã –ü–æ–¥—Ä—è–¥—á–∏–∫–æ–≤: $($response.contractors_count)" -ForegroundColor $Green
    Write-Host "üìã –û—Ç—á–µ—Ç–æ–≤: $($response.reports_generated)" -ForegroundColor $Green
} catch {
    $statusCode = $_.Exception.Response.StatusCode.value__
    Check-Status $statusCode $_.Exception.Message
}
Write-Host ""

Write-Host "üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!" -ForegroundColor $Green
Write-Host "üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ª–æ–≥–∞—Ö –≤—ã—à–µ" -ForegroundColor $Blue 