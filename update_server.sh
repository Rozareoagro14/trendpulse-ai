#!/bin/bash

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ TrendPulse AI..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[–û–®–ò–ë–ö–ê]${NC} $1"
}

success() {
    echo -e "${GREEN}[–£–°–ü–ï–•]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "docker-compose.yml" ]; then
    error "–§–∞–π–ª docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ /opt/trendpulse-ai"
    exit 1
fi

log "1. –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ Git..."
git pull origin main
if [ $? -eq 0 ]; then
    success "–ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω"
else
    error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–¥–∞ –∏–∑ Git"
    exit 1
fi

log "2. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose down
success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

log "3. –û—á–∏—â–∞–µ–º Docker –∫—ç—à –∏ –æ–±—Ä–∞–∑—ã..."
docker system prune -a -f
docker volume prune -f
success "Docker –æ—á–∏—â–µ–Ω"

log "4. –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã —Å –Ω—É–ª—è..."
docker-compose build --no-cache --pull
if [ $? -eq 0 ]; then
    success "–û–±—Ä–∞–∑—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω—ã"
else
    error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ –æ–±—Ä–∞–∑–æ–≤"
    exit 1
fi

log "5. –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose up -d
if [ $? -eq 0 ]; then
    success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"
else
    error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    exit 1
fi

log "6. –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ (30 —Å–µ–∫—É–Ω–¥)..."
sleep 30

log "7. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose ps

log "8. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ API..."
for i in {1..10}; do
    response=$(curl -s -o /dev/null -w "%{http_code}" "http://localhost:8000/health")
    if [ "$response" = "200" ]; then
        success "API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ (HTTP $response)"
        break
    else
        warning "–ü–æ–ø—ã—Ç–∫–∞ $i/10: API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç (HTTP $response)"
        if [ $i -eq 10 ]; then
            error "API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ—Å–ª–µ 10 –ø–æ–ø—ã—Ç–æ–∫"
            log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ backend..."
            docker-compose logs backend | tail -20
            exit 1
        fi
        sleep 5
    fi
done

log "9. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–æ—Ç–∞..."
bot_logs=$(docker-compose logs bot | tail -5)
if echo "$bot_logs" | grep -q "Bot started"; then
    success "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ"
else
    warning "–ë–æ—Ç –º–æ–∂–µ—Ç –Ω–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏..."
    docker-compose logs bot | tail -10
fi

log "10. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
db_status=$(docker-compose exec -T db psql -U postgres -d trendpulse -c "SELECT COUNT(*) FROM projects;" 2>/dev/null | tail -1 | tr -d ' ')
if [ "$db_status" -gt 0 ] 2>/dev/null; then
    success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–∞–π–¥–µ–Ω–æ $db_status –ø—Ä–æ–µ–∫—Ç–æ–≤"
else
    warning "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ–π"
fi

echo ""
echo "üéâ ========================================="
echo "üéâ –û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!"
echo "üéâ ========================================="
echo ""
echo "üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:"
echo "   ‚úÖ Backend API: –†–∞–±–æ—Ç–∞–µ—Ç"
echo "   ‚úÖ Telegram Bot: –ó–∞–ø—É—â–µ–Ω"
echo "   ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: –ü–æ–¥–∫–ª—é—á–µ–Ω–∞"
echo ""
echo "üß™ –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ Telegram:"
echo "   1. –û—Ç–∫—Ä–æ–π—Ç–µ @TrendPulseAI_bot"
echo "   2. –ù–∞–∂–º–∏—Ç–µ 'üìä –ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã'"
echo "   3. –ù–∞–∂–º–∏—Ç–µ 'üìà –°—Ü–µ–Ω–∞—Ä–∏–∏'"
echo "   4. –ù–∞–∂–º–∏—Ç–µ 'üë∑ –ü–æ–¥—Ä—è–¥—á–∏–∫–∏'"
echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   docker-compose ps          # –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
echo "   docker-compose logs bot    # –õ–æ–≥–∏ –±–æ—Ç–∞"
echo "   docker-compose logs backend # –õ–æ–≥–∏ API"
echo "   curl localhost:8000/health # –ü—Ä–æ–≤–µ—Ä–∫–∞ API"
echo ""
echo "üîß –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:"
echo "   docker-compose restart     # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫"
echo "   docker-compose down && docker-compose up -d # –ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫"
echo "" 